file:
- description: Entities related to identity access and management.

iam_team:
- description: >
    Responsible for managing access at NM. There is limited written documentation on
    how IAM works at NM, but the IAM team can help with any questions or related
    tasks.
- acronym:
    value: iam
    expansion: Identity and Access Management
- team

microsoft_entra:
- description: >
    The enterprise solution used by NM for identity access and management, including
    for e.g. Databricks.

user_principal_name:
- description: >
    The unique identity at the heart of access. At NM this is the [nm_id] (which is
    generated first) + "@nm.org", i.e. the user email.
- acronym:
    value: UPN
    expansion: User Principal Name
- fields:
    value [str]:
        description: The actual user principal name.
        pattern: NM\d6@nm\.org
    nm_id [str]:
- primary_key: value
- foreign_keys:
    nm_id: nm_role.nm_id

nm_b2b_account:
- description: >
    An account defined by another organization but used for access in NM. A B2B account
    has an entry in NM systems, though it's somewhat of a shell.
- component

security_group:
- description: >
    Created using Entra, security groups can be used for various purposes. The
    security_groups table stores current relevant security groups.
- fields:
    value [str]: Key to refer to the security group by.
    full_name [str]: Full name of the security group.
    description [str]: Describes purpose and individuals associated.
    url [str]: Link to a page in Entra where the group can be
- path: ../data/security_groups.csv

access_package:
- description: >
    Users can submit an access package to request a set of permissions for an
    organization. Access packages are hosted by a multi-organization application that a
    given Microsoft organization can use. Access package owners can make their
    packages visible to organizations of their choice.

nu_role:
- fields:
    net_id [str]: Unique identifier for NU.

nm_role:
- fields:
    nm_id [str]:
        description: >
            Main ID that shows up throughout NM. The [user_principal_name] is what's
            actually used for access.
        pattern: NM\d6
    pa_id [str]:
        description: >
            If non-null, the user has a privileged access account, which uses the same
            six digits as the NM ID.
        pattern: PA\d6

nm_job:
- fields:
    job_code [int]: 
    title [str]:
    security_groups [list[str]]: >
        One can associate a job code with one or more security groups, and as part of
        onboarding anyone with that job code they can be added to the security groups.
- primary_key: job_code

nm_job_role:
- fields:
    nm_id [str]:
    job_code [int]: The code associated with the role.
- foreign_keys:
    nm_id: nm_role.nm_id
    job_code: nm_job.job_code

fsm_analyst_role:
- description: Individuals who fulfill data requests.
- fields:
    nm_id [str]:
    nu_id [str]:
- primary_key: nm_id
- foreign_keys:
    nm_id: nm_role.nm_id
    nu_id: nu_role.nu_id

ra_team_member_role:
- fields:
    entra_id [str]:
- foreign_keys:
    nm_id: fsm_analyst_role.nm_id

power_user_role:
- fields:
    entra_id [str]:
- foreign_keys:
    nm_id: fsm_analyst_role.nm_id

rhlcc_power_users:
- fields:
    entra_id [str]:

nm_compatible_role:
- fields:
    nm_id [str]: Unique identifier.
    identity_type [categorical]:
        description: Type of identity.
        categories:
            - employee
            - person_of_interest
            - b2b

requester:
- description: The person submitting the request.
- fields:
    nm_id [str]:
- foreign_keys:
    nm_id: nm_compatible_role.nm_id

support_team_member:
- description: >
    Member of the team responsible for supporting FSM use of the NMEDW,
    among other things.
- fields:
    nu_id [str]:
- foreign_keys:
    nu_id: nu_role.nu_id

pbi_workspace_role:
- fields:
    user [person]: The user for the role.
    workspace [workspace]: The PBI workspace in question.
    role [categorical]: The PBI role.

grant_analyst_access:
- task
- satisfies: can_grant_access_to_analyst
- child: grant_analyst_pa_account
- child: grant_analyst_azdo_access
- child: grant_analyst_databricks_access
- child: grant_analyst_vm_access
- status: in development

grant_analyst_pa_account:
- task
- satisfies: can_grant_analyst_pa_account
- status: in development

grant_analyst_azdo_access:
- task
- satisfies: can_grant_analyst_azdo_access
- status: in development

grant_analyst_databricks_access:
- task
- satisfies: can_grant_analyst_databricks_access
- status: in development

grant_analyst_vm_access:
- description: Only necessary for [power_user_role].
- task
- satisfies: can_grant_analyst_vm_access
- status: in development

set_report_access:
- task
- satisfies: can_control_report_access
- child: create_and_sync_security_groups
- child: apply_security_groups_to_reports
- status: in development

create_and_sync_security_groups:
- description: >
    Using the eIRB authorized personnel list as a base the IAM team can create a script
    that creates one security group per study.
- task

apply_security_groups_to_reports:
- task
- child: apply_security_groups_to_pbi_reports
- child: apply_security_groups_to_sharepoint_folders