# Relationship components
link:
- description: >
    A component that describes a generic link between two entities.
- component
- fields:
    source [entity]: The source entity.
    target [entity]: The target entity.
    link_type [entity]: The type of link.

node:
- description: A component describing an entity in the context of the entity as a node.
- component:
    multiplicity: "0..1"
- fields:
    connected_component_group [int]: >
        Which collection of components this node is connected to.

links:
- description: >
    A description of multiple links, using the syntax:
        source --> target
        second_source --> second_target
- component
- fields:
    value [str]: >
        A string that describes the edges, following the format "{source} --> {target}"
        with linebreaks separating different links.
    link_type [entity]:
        description: >
            The type of the links. Must be a component that has either a source and target
            component or a link component.
        default: depended_on_by

link_type:
- description: >
    If a [compdef] entity owns a [link_type] component then the component represents
    a pairwise relationship. Such [compdef] entities all have a "value" field of
    type [entity] that is the "target" and any owners of such a component are
    the "source".
- component:
    multiplicity: "0..1"
- fields:
    directed [bool] = True: Whether or not the link is directed.
    reverse [entity]: The link_type for the reverse direction.

parent:
- description: The target entity is the parent of the source entity.
- component
- link_type:
    reverse: child
- fields:
    value [entity]: The parent entity to the owner entity.
- todo: >
    Reverse this with child, since that produces a graph with more-consistent
    terminology.

child:
- description: The target entity is the child of the source entity.
- component
- link_type:
    reverse: parent
- fields:
    value [entity]: The child entity to the owner entity.

depends_on:
- description: The source entity depends on the target entity.
- component
- link_type:
    reverse: depended_on_by
- fields:
    value [entity]: The entity the owner entity depends on.

depended_on_by:
- description: The source entity is depended on by the target entity.
- component
- link_type:
    reverse: depends_on
- fields:
    value [entity]: The entity the owner entity is depended on by.

transformation_of:
- description: >
    The source entity is a transformation of the target entity, i.e. the underlying
    data is the same to within the limitations of the representations.
- component
- link_type:
    directed: False
- fields:
    value [entity]: The entity the owner entity is a transformation of.

child_component:
- description:
    If a component definition includes this tag then components of that type have
    parent-child relationships with their entities. For example, this is the case
    for Python components.
- todo: >
    Consider if we can roll this up into a more general solution. For example,
    we might include a "default_components" component for component definitions.
- component