infrastructure:
- description: >
    If owned, the owner is a set of technologies, functions, people, etc. defined by
    a manifest and created to satisfy one or more requirements.
- component:
    multiplicity: "0..1"

requirement:
- description: >
    If owned, the owner is a condition an infrastructure is designed around fulfilling.
- component:
    multiplicity: "0..1"
- fields:
    value [entity]: The infrastructure this requirement is for.
    priority [float]:
        description: Value ranging from 0 (not a priority) to 1 (top priority).
        default: 0.5

status:
- description: Tracks implementation progress.
- component:
    multiplicity: "0..1"
- fields:
    value [str]:
        categories:
            - new
            - in design
            - in development
            - in review
            - in production
            - on hold
            - cancelled

todo:
- description: A descriptive note regarding something to be addressed.
- component
- fields:
    value [str]: A description of the thing to address.

satisfies:
- description: The source (owner) entity satisfies the target entity.
- component
- link_type:
    reverse: satisfied_by
- fields:
    value [entity]: The [requirement] entity the owner entity satisfies.

supports:
- description: The source (owner) entity supports the target entity.
- component
- link_type:
    reverse: supported_by
- fields:
    value [entity]: The entity the owner entity supports.

task:
- description: >
    If owned, the entity is a task to complete. Fully-implemented tasks can take a few
    forms:
        1. A function, likely in Python.
        2. A Directed Acyclic Graph (DAG).
        3. A written procedure.
    All above require an task executor.
- component:
    multiplicity: "0..1"

test:
- description: >
    If owned, the entity is a test to perform on a registry. At this time it must
    be the path to a Python function that accepts a registry as an argument
    and returns a dataframe containing any invalid components.
- component:
    multiplicity: "0..1"
- fields:
    implementation [str]: The location of the test code.

procedure:
- description: A process for completing a task.
- component:
    multiplicity: "0..1"
- fields:
    value [str]: Procedure in written format, following no particular guidelines.

input:
- description: Component representing input.
- component:
    multiplicity: "0..1"
- fields:
    value [id]: >
        Input component instances for the task. Is of type "fields", so will be parsed
        in the same manner.

output:
- description: Component representing output.
- component:
    multiplicity: "0..1"
- fields:
    value [id]: >
        Output component instances for the task. Is of type "fields", so will be parsed
        in the same manner.

fully_designed:
- description: >
    Each [requirement] entity has at least one [satisfies] entity.
- requirement:
    priority: 0.9

test_fully_designed:
- description: If this test passes then the fully_designed requirement is fulfilled.
- test
- code: iac_sketch.system_tests.test_designed
- satisfies: fully_designed
- status: "in development"

fully_implemented:
- description: |
    Each [requirement] entity has at least one [satisfies] entity and they must
    meet the following conditions:
    1. If a [test] entity, it must have an implementation that passes when executed.
    2. If a [task] entity, it must have a status of "in production".
- requirement:
    priority: 0.7

test_fully_implemented:
- description: If this test passes then the fully_implemented condition is fulfilled.
- test
- code: iac_sketch.system_tests.test_implemented
- satisfies: fully_implemented
- status: "in development"

fully_defined:
- description: All [compdef] entities are defined and valid.
- requirement:
    priority: 0.8

test_fully_defined:
- description: If this test passes then the fully_defined condition is fulfilled.
- test
- code: iac_sketch.system_tests.test_defined
- satisfies: fully_defined
- status: "in development"

fully_connected:
- description: >
    The network composed of [link] components and entities as nodes is fully connected.
- requirement:
    priority: 0.4

test_fully_connected:
- description: If this test passes then the fully_connected condition is fulfilled.
- test
- code: iac_sketch.system_tests.test_connected
- satisfies: fully_connected
- status: "in development"

no_forbidden_components:
- description: No [error], [todo], or other "forbidden" components.
- requirement:
    priority: 0.5

test_no_forbidden_components:
- description: If this test passes then the no_forbidden_components condition is fulfilled.
- test
- code: iac_sketch.system_tests.test_no_forbidden_components
- satisfies: no_todos
- status: "in development"

codemia:
- description: A related product. Advertises system design interview practice.
- url: codemia.io

figma:
- description: A related product.
- url: figma.com