infrastructure:
- component
- description: >
    If owned, the owner is a set of technologies, functions, people, etc. defined by
    a manifest and created to satisfy one or more requirements.

requirement:
- component
- description: >
    If owned, the owner is a condition an infrastructure is designed around fulfilling.

    A requirement entity is satisfied if:
        1. All child requirements have a status "done" or "cancelled".
- fields:
    infrastructure [entity]: The infrastructure this requirement is for.

status:
- component
- description: Tracks progress.
- fields:
    value [str]:
        categories:
            - new
            - in design
            - in development
            - in review
            - done
            - on hold
            - cancelled

satisfies:
- component
- link_type
- description: The source (owner) entity satisfies the target entity.
- fields:
    value [entity]: The [requirement] entity the owner entity satisfies.

supports:
- component
- link_type
- description: The source (owner) entity supports the target entity.
- fields:
    value [entity]: The entity the owner entity supports.

task:
- component
- description: >
    If owned, the entity is a task to complete. Fully-implemented tasks can take a few
    forms:
        1. A function, likely in Python.
        2. A Directed Acyclic Graph (DAG).
        3. A written procedure.
    All above require an task executor.

procedure:
- component
- description: A process for completing a task.
- fields:
    value [str]: Procedure in written format, following no particular guidelines.

input:
- component
- description: Component representing input.
- fields:
    value [id]: >
        Input component instances for the task. Is of type "fields", so will be parsed
        in the same manner.

output:
- component
- description: Component representing output.
- fields:
    value [id]: >
        Output component instances for the task. Is of type "fields", so will be parsed
        in the same manner.

fully_designed:
- description: Each [requirement] entity has exactly one [satisfies] entity.
- requirement

fully_implemented:
- description: >
    Each [requirement] entity has exactly one [satisfies] entity
    with a status of "done".

well_defined:
- description: All [compdef] entities are defined and valid.
- requirement

fully_connected:
- description: >
    The network composed of [link] components and entities as nodes is fully connected.
- requirement