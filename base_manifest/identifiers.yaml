primary_key:
- description: >
    If owned, the owner entity must be a component definition, in which case the
    primary key is the field that acts as the unique identifier for each instance of
    that component.
- component
- fields:
    value [str]:
        description: >
            The name of the primary key column. It must be a field of the component.
        required: True
- depends_on: fields

foreign_key:
- description: >
    If owned, the owner entity must be a component definition, in which case a
    foreign key is a field that must also be a field in another component definition.
    A foreign key connects instances of the different component definitions.
- component
- fields:
    value [str]:
        description: >
            The name of the foreign key column. It must be a field of the component.
        required: True
    other_component [str]: Name of the type of the other component.
    other_field [str]: Name of the field in the other component that is the foreign key. 
- depends_on: fields

foreign_keys:
- description: A collection of multiple foreign_key components with condensed syntax.
- fields:
    value [dict[str, str]]: |
        A dictionary with the following syntax:
            foreign_key_in_this_table: other_table.foreign_key_in_other_table
- depends_on: fields
- todo:
    value: The logic to parse this is not yet implemented.
    priority: 0.2

path:
- description: The location of the owner entity within another entity.
- component
- fields:
    value [str]: |
        A string with the following syntax: containing_entity:location_in_entity
    containing_entity [entity]: The entity the owner entity is located within.
    location_in_entity [str]: The location, with "/" or "." separators.

name:
- description: >
    A human-readable identifier that serves as a label for an entity. When used as part
    of a component definition entity this is the name of the table that stores
    component instances.
- component
- fields:
    value [str]: The identifier.

