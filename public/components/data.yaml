patient:
- description: Central entity all care and analysis is centered around.
- fields:
    nm_bi.ir_id [str]: >
        One of the options for identifying a patient, the unique ID contained in NM_BI.
    clarity.pat_id [str]: >
        Another option for identifying a patient.
- time_dependent

cohort:
- description: A group of patients for a study.
- fields:
    config_id [str]: Unique ID for a cohort.
    report [entity|1..*]: Each cohort corresponses to a specific report.
    patients [list[entity]]:
    is_active [bool]: Cohorts become active after a specific time and de-activate later.
- fields_size:
    estimate: >
        time_size * (2 + n_patients) * n_entities
        ~ (365 * 5) * (2 + 1e6) * 2e3 ~ 1e12 ~ 1 TB

cohort_patients:
- description: >
    Normalized version of a cohort, in the form of a crosswalk between
    cohort and patient. This is technically Type II, but we routinely archive to keep
    the data size small.
- representation_of: cohort
- fields:
    cohort [entity]:
    patient [entity]:
    meta_updated_datetime [timestamp]: Time at which this entry was added.
- time_dependent:
    scd_type: Type II

cohort_patients_history:
- description: >
    Only stores changes to cohort, which reduces the amount of data stored.
- representation_of: cohort
- fields:
    cohort [entity]:
    patient [entity]:
    change_type [categorical]: 'Options: "inserted" or "deleted".'
    change_datetime [timestamp]: When the change occurred.
- time_dependent:
    scd_type: Type IV
- algorithm: >
    inserted = cohort_patients.join(cohort_patients_history, how="left_anti")
    deleted = cohort_patients_history.join(cohort_patients, how="left_anti")
    cohort_patients_history = cohort_patients_history.union(inserted).union(deleted)

query_cohort:
- description: Load the list of patients in a cohort at a specified time.
- task
- parameters:
    cohort [entity]:
    time_observed [timestamp]: >
        The time at which to look at the population of the cohort.
- algorithm: >
    cohort_ti = cohort.tloc[time_observed]
    if not cohort_ti.is_active:
        return
    return cohort_ti.patients

cohort_patient:
- description: A record showing that a patient was in a cohort
- fields:
    patient [entity]: 
    cohort [entity]: 

report:
- description: >
    A report is a set of code, tables, etc. generated in response to a request.
    Possible names:
    - report
    - product
    - delivery
    - deliverable
    - report
    - solution
    - collection
    We are already using report widely, though. E.g. ra_reports, research_dm.reports.
- fields:
    report_id [str]: ID for the report, {irb_number}.{irb_rank:.02d} (e.g. STU001234.01)
    irb_number [str]: IRB number for the study associated with the report.
    irb_rank [int]: >
        IRB rank is defined as the number of reports associated with a study at
        the time of request intake, counting the report itself. As such, IRB rank
        starts at 1 and increases in steps of 1. When doing a partition over irb_number
        ordered by created_date ascending this is the row number.
    azdo_id [int]: Azure DevOps ticket associated with the request.
    pbi_workspace [str]: Which Power BI workspace the report lives in.
    inserted_datetime [timestamp]: >
        Date when the report was created, i.e. the product_id was created and we started
        tracking report status.
    data_steward_approval [bool]: Whether or not the data has been approved for release.
    description [str]: Description for the report.
- primary_key: product_id
- code_location_format:
    repository: ra_reports
    branch: reports/{irb_number}
    parent_path: reports/{irb_number}_{human_readable_label}

pbi_report:
- fields:
    description [str]: This description will show up in the portal.

pbi_app_homepage:
- description: >
    Very helpful if this exists for each app for deployment purposes.

request:
- description: The data submitted via the intake form.
- fields:
    snow_id [str]: The service now ticket associated with the request.
    requester_net_id [str]: NU Net ID for the requester.
    irb_number [str]: IRB number of the associated study.
    description [str]: Description of the request.
- primary_key: snow_id

work_item:
- description: An Azure DevOps work item.
- fields:
    azdo_id [int]: The ID provided by AzDO.
    assigned_to [str]: The analyst the ticket is assigned to.

table_references:
- references: >
    report.report_id 1 -- 1..* request.product_id
    report.report_id 0..1 -- 0..* work_item.report_id


# // SNow
# Table requests {
#   snow_id varchar [pk]
#   requester_net_id varchar
#   irb_number varchar
#   azdo_id varchar
#   is_approved bool
#   is_defined bool
# }

# // Azure DevOps
# Table reports {
#   report_id varchar [pk, not null]
#   irb_number varchar [ref: > studies.irb_number]
#   irb_rank int
#   snow_id varchar [null, ref: < requests.snow_id]
#   analyst_nm_id varchar [ref: - analysts.nm_id]
# }

# // From eirb
# Table studies {
#   irb_number varchar [pk, not null]
# }

# // Our team + list of power users
# Table analysts {
#   nm_id varchar [pk, not null]
#   pa_id varchar
#   is_power_user bool
# }

# // Written by analysts
# Table code_products {
#   report_id varchar [not null, ref: > reports.report_id]
#   git_branch varchar
#   notebook_path varchar
#   notebook_type varchar [note: 'etl, cohort, or report']
# }

# // Defined by cohort_notebook
# Table cohort_patients {
#   report_id varchar [not null, ref: > reports.report_id, note: '1:1 cohort to report']
#   patient_id varchar
#   patient_id_type varchar [note: 'e.g. nm_bi.ir_id, clarity.pat_id, caboodle.pat_dur_key']
# }

# // Defined by code products
# Table data_products {
#   report_id varchar [not null, ref: > reports.report_id]
#   path varchar
# }

# // Created by analysts
# Table pbi_products {
#   pbi_id varchar
#   report_id varchar [not null, ref: < reports.report_id]
#   path varchar
# }

