# Requirements
accept_request:
- description: >
    We should be able to receive a request, initiating the process.
- requirement
- task

deliver_report:
- description: >
    After completing the request, viewers should be able to request the report
    at their preferred time.
- requirement
- task

# Implementation
request_workflow:
- description: The overall workflow.
- links:
    edges: |
      accept_request --> build_report
      build_report --> deliver_report
    link_type: dependency

build_report:
- description: >
    The actual work on the report itself.
- task
- links:
    edges: |
      define_report --> set_up_environment
      set_up_environment --> set_up_report
      set_up_report --> work_on_report
      work_on_report --> get_feedback_on_report
      get_feedback_on_report --> work_on_report
      get_feedback_on_report --> finalize_report
    link_type: dependency

define_report:
- task
- description: Define the report products to be delivered, etc.

set_up_environment:
- task
- description: Set up the environment used to create the report.

set_up_report:
- task
- description: Set up the file structure for a report, including a template.
- status: design

work_on_report:
- task
- description: Make progress on producing the report products defined in define_report.

get_feedback_on_report:
- task
- description: Get feedback on the report in progress.

finalize_report:
- task
- description: Close out the PR for the report.

run_report:
- description: The steps to run the code to generate a report.
- task
- links:
    edges: |
      run_etl --> run_cohort_notebook
      run_cohort_notebook --> run_report_notebook
    link_type: dependency

run_etl:
- description: Run any ETL needed for the report.
- task

run_cohort_notebook:
- description: Run the notebook that selects the cohort.

run_report_notebook:
- description: Run the notebook that produces the report tables.

run_report_algorithm_version:
- alternative_to: run_report
- description: Run the code to generate a report.
- task
- algorithm: >
    sorted_report_code = report_code.sort("execution_priority")
    for code in sorted_report_code:
      notebook.run(code)

cohort_notebook:
- description: A notebook containing the code to define the cohort for a report.
- product:
    product_type: cohort_notebook

report_notebook:
- code:
    code_type: report_notebook
    description: A notebook containing the code to generate a report table for a report. 
    repository: ra_reports
    branch: report/{report_id}
    path:
        irb_rank = 1: reports/{irb_number}/report{optional_label}.py
        irb_rank > 1: reports/{irb_number}/report_{irb_rank}/report{optional_label}.py

report_table:
- description: >
    A table containing the selected data elements for a report. There can be multiple.

pbi_report:
- description: The Power BI dashboard.
- str_formatter: 

report_string_formatter:
- case:
    input: report
    cases:
        report.irb_rank == 1:
            report.product == cohort_notebook : reports/{irb_number}/cohort{optional_label}.py
            report.product == report_notebook: reports/{irb_number}/report{optional_label}.py
            report.product == report_table: reports/{irb_number}/report{optional_label}.py
        report.irb_rank > 1:
            file == cohort_notebook: reports/{irb_number}/cohort.py